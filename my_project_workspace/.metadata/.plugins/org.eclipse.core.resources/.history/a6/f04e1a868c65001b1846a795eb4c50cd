[General]
network = BestEffort

description = wireless hosts communicating non-critical (non-TSN) traffic using TSN switches. 
record-eventlog = false 
debug-on-errors = true
result-dir = results_case1
sim-time-limit = 1s

# debug
**.displayAddresses = true
**.verbose = true

# MAC Addresses
**.workstation1.wlan[*].address = "00-00-00-00-00-02"
**.workstation2.wlan[*].address = "00-00-00-00-00-03"
**.backupServer.wlan[*].address	= "00-00-00-00-00-05"

# Extra definitions for the wireless portion:
# access point configuration
**.accessPoint1.wlan[0].address = "00-00-00-00-00-06"
**.accessPoint1.wlan[0].mgmt.ssid = "access1"
**.accessPoint2.wlan[0].address = "00-00-00-00-00-07"
**.accessPoint2.wlan[0].mgmt.ssid = "access2"

# workstation 1 is associated with AP1
**.workstation*.wlan[0].mgmt.accessPointAddress = "00-00-00-00-00-06"

# backup server is associated with AP2
**.backupServer.wlan[0].mgmt.accessPointAddress = "00-00-00-00-00-07"

# use simplified ieee802.11 management (no association, authentication etc.)
**.workstation*.wlan[*].mgmt.typename = "Ieee80211MgmtStaSimplified"
**.backupServer.wlan[*].mgmt.typename = "Ieee80211MgmtStaSimplified"
**.workstation*.**.agent.typename = ""
**.backupServer.**.agent.typename = ""
**.accessPoint*.wlan[*].mgmt.typename = "Ieee80211MgmtApSimplified"

# Switches
**.switch*.processingDelay.delay = 5us
**.filteringDatabase.database = xmldoc("xml/TestScenarioRouting.xml", "/filteringDatabases/")

**.switchA.eth[3].queue.gateController.initialSchedule = xmldoc("xml/TestScenarioSchedule_AllOpen.xml", "/schedules/switch[@name='switchA']/port[@id='3']/schedule")
**.switchB.eth[1].queue.gateController.initialSchedule = xmldoc("xml/TestScenarioSchedule_AllOpen.xml", "/schedules/switch[@name='switchB']/port[@id='1']/schedule")
**.switch*.eth[*].queue.gateController.enableHoldAndRelease = false
**.switch*.eth[*].queue.numberOfQueues = 8
**.switch*.eth[*].queue.tsAlgorithms[0].typename = "StrictPriority"
**.switch*.eth[*].queue.tsAlgorithms[1].typename = "StrictPriority"
**.switch*.eth[*].queue.tsAlgorithms[2].typename = "StrictPriority"
**.switch*.eth[*].queue.tsAlgorithms[3].typename = "StrictPriority"
**.switch*.eth[*].queue.tsAlgorithms[4].typename = "StrictPriority"
**.switch*.eth[*].queue.tsAlgorithms[5].typename = "StrictPriority"
**.switch*.eth[*].queue.tsAlgorithms[6].typename = "StrictPriority"
**.switch*.eth[*].queue.tsAlgorithms[7].typename = "StrictPriority"
**.switch*.eth[*].queue.queues[0].expressQueue = true
**.switch*.eth[*].queue.queues[1].expressQueue = true
**.switch*.eth[*].queue.queues[2].expressQueue = true
**.switch*.eth[*].queue.queues[3].expressQueue = true
**.switch*.eth[*].queue.queues[4].expressQueue = true
**.switch*.eth[*].queue.queues[5].expressQueue = true
**.switch*.eth[*].queue.queues[6].expressQueue = true
**.switch*.eth[*].queue.queues[7].expressQueue = true

**.queues[*].bufferCapacity = 363360b

**.switchA.eth[3].mac.enablePreemptingFrames = false

# Schedule/Routing Swap
#**.scheduleSwap.schedule = xmldoc("xml/TestScenarioScheduleSwap.xml")

# Workstations
**.workstation*.trafGenApp.destAddress = "00-00-00-00-00-05"
**.workstation*.trafGenApp.packetLength = 1500Byte-4Byte # MTU-Size - VLAN-Tag-Size
**.workstation*.trafGenApp.sendInterval = 12us
**.workstation*.trafGenApp.vlanTagEnabled = true
**.workstation1.trafGenApp.pcp = 6
**.workstation2.trafGenApp.pcp = 5

# Backup Server
**.backupServer.trafGenApp.numPacketsPerBurst = 0
**.backupServer.trafGenApp.sendInterval = 1ms
**.backupServer.trafGenApp.packetLength = 100B

# Extra bits for the wireless portion:

# Wireless Medium
# global data rates
**.wlan*.bitrate = 288Mbps

#**.bandName = "5 GHz (20 MHz)"
**.opMode = "n(mixed-2.4Ghz)"
#**.wlan[*].radio.antenna.numAntennas = 8 #maximum number of streams for 802.11ac is 8. Antenna count must not be less than streams.

# Modelling interference and communication
**.analogModel.ignorePartialInterference = true

# Visualisation definitions to support animations to show what's going on
#**.visualizer.mediumVisualizer.displaySignals = true
#**.visualizer.physicalLinkVisualizer.displayLinks = true

# This next line helps with the "implicit chunk serialization" error
**.visualizer.mediumVisualizer.packetFilter = "" #take care to deal with this line if need be